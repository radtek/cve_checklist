#!/usr/bin/bash
#. ./oracle_param.ini
################################################################################
#                               CVE-2021-25122
#                         12.2.0.1, 19c, 21c
# Sample script that checks the DB version and execute a check following
# by recommendation.
# Create oracle_param.ini file with defined variables
# Both script and ini required to have u+x permission
# Sample exection
# $./CVE-2021-25122.sh
#
# Change History
# 15/10/2021  Deepak Baranwal  Original code. This is a template for creating
#                              new Bash shell scripts.
#                              Add new history entries as needed.
#
#
################################################################################
################################################################################

# export ORACLE_BASE=/u01/app/oracle
# export ORACLE_HOME=/u01/app/oracle/product/18.4.0/db_1
# export ORACLE_SID=orclcdb
# export SQLPLUS_HOME=/u01/app/oracle/product/18.4.0/db_1/bin/sqlplus
# export ORACLE_HOME=$PATH:$ORACLE_HOM/bin

discover_25122_1(){
discover_25122_1_return=0
discover_25122_2_return=0
discover_25122_3_return=0
discover_25122_4_return=0
  #val1=`crsctl status res -t|grep -oih "ora.qosmserver"`
  val2=`srvctl status qosmserver|grep -oih "QoS Management Server is enabled"`
  val3=`srvctl status qosmserver|grep -oih "QoS Management Server is running"`
  val4=`ps -ef|grep "tomcat"  |awk 'match($0,".port="){print substr($0,RSTART+6,4)}'`
  #val4=8888
   if [ "${val1}" = "ora.qosmserver" ]
  then
    discover_25122_1_return=1
   else
    discover_25122_1_return=0
  fi
  if [ "${val3}" = "QoS Management Server is running" ]
  then
    discover_25122_3_return=1
   else
    discover_25122_3_return=0
  fi

  case ${val4} in
    8888) discover_25122_4_return=8888 ;;
    8885) discover_25122_4_return=8885 ;;
       *) discover_25122_4_return=${val4};;
  esac

  return "$discover_25122_1_return"
  return "$discover_25122_3_return"
  return "$discover_25122_4_return"
}



discover_25122_2(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
select account_status from dba_users where username = 'APPQOSSYS';
EOM
)
 if [ "${val1}" = "OPEN" ]
 then
  discover_25122_5_return=1
 else
  discover_25122_5_return=0
 fi
  return "$discover_25122_5_return"
}


mitigate_25122_1(){
echo "Mitigate CVE-2021-25122 #1 "
echo "please review commands in sql file mitigate_25122_1.txt"
echo "The current tomcat port in use is " >mitigate_25122_1.txt
echo ${val4} >>mitigate_25122_1.txt
echo "The Tomcat distribution provided with GI for QoS is customized profiled version of Tomcat, with limited JAR files deployed for the Tomcat Web Container, thus is distributed as a secure application.
It is recommended to firewall the ports that QoS uses, namely 8888(RMI) and 8895(HTTP) defaults.

srvctl qosmserver commands.
https://docs.oracle.com/en/database/oracle/oracle-database/12.2/cwadd/server-control-command-reference.html#GUID-D8A9FE81-F5AA-443E-B489-FFF557442E14

To view configuration for QoS.
#srvctl config qosmserver

To modify the HTTP port, if required
#srvctl modify qosmserver -httpport <port>
#srvctl stop qosmserver
#srvctl start qosmserver
" >>mitigate_25122_1.txt
}

mitigate_25122_2(){
  echo "Mitigate CVE-2021-25122 #2 "
  echo "please review commands in sql file mitigate_25122_2.txt"
  echo "For Attack Surface Reduction, if QoS Is Not Being Used (confirmed by Check #4 in DISCOVER section) then disable qosmserver.
  srvctl disable qosmserver -node <node>
  ">mitigate_25122_2.txt

}

### main ###

discover_25122_1
discover_25122_2

discover_25122_1_return=$?
discover_25122_3_return=$?
discover_25122_4_return=$?
discover_25122_5_return=$?

if [ "$discover_25122_1_return" = 1 ] || [ "$discover_25122_3_return" = 1 ] || [ "$discover_25122_4_return" > 1 ]
then
   mitigate_25122_1
fi

if [ "$discover_25122_5_return" = 1 ]
then
   mitigate_25122_2
fi

### main ###
