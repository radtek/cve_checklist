#!/usr/bin/bash
. ./oracle_param.ini

################################################################################
#                              CVE-2019-17545                                   
#                                12.2.0.1, 19c                              
# Sample script that checks the DB version and execute a check following       
# by recommendation. 
# Create oracle_param.ini file with defined variables                                                         
# Both script and ini required to have u+x permission
# Sample exection
# $./CVE-2019-17545.sh
# 
# Change History                                                               
# 15/10/2021  Deepak Baranwal  Original code. This is a template for creating     
#                              new Bash shell scripts.                            
#                              Add new history entries as needed.                 
#                                                                              
#                                                                              
################################################################################
################################################################################


discover_1(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
select value from v\$option where parameter='Spatial';
EOM
)
  #echo "${val1}"
  if [ "${val1}" = "TRUE" ]
   then
     echo "Spatial is installed"
    else
      echo "Spatial is not installed"
   fi
}

discover_2(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
select status from dba_registry where comp_id='SDO';
EOM
)
  #echo "${val1}"
  if [ "${val1}" = "VALID" ]
   then
     echo "Spatial SDO is configured"
     mitigate_1 
    else
      echo "Spatial SDO is not configured"
      return 0
   fi
}

mitigate_1(){
 echo "If the option is not required for this database consider LOCK and EXPIRE account status or DROP user."
 echo "ALTER USER MDSYS ACCOUNT LOCK PASSWORD EXPIRE;"
 echo "ALTER USER MDDATA ACCOUNT LOCK PASSWORD EXPIRED;"
 echo "or"
 echo "DROP USER MDSYS CASCADE;"
 echo "DROP USER MDDATA CASCADE;"
}

### main ###
ver=$(sqlplus -s / as sysdba <<EOM
      set heading OFF termout ON trimout ON feedback OFF
      set pagesize 0
      select version from v\$instance;
EOM
)

case $ver in
  '18.0.0.0.0')
     echo "Test for version 18c"
     discover_1
     discover_2
     ;;
  '19.0.0.0.0)
     echo "Test for version 19c"
     discover_1
     discover_2 
     ;;
  '12.1.0.0.0')
     echo "Test for version 12c"
     discover_1
     discover_2
     ;;
  '12.2.0.0.0')
     echo "Test for version 12c"
     discover_1
     discover_2
     ;;
  *)
     echo "Incompatible Oracle Version"
     ;;
esac
### main ###
