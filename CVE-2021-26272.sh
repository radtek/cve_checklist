#!/usr/bin/bash
. ./oracle_param.ini
################################################################################
#                       CVE-2021-26272
#
#                    12.1.0.2, 12.2.0.1, 19c
# Sample script that checks the DB version and execute a check following
# by recommendation.
# Create oracle_param.ini file with defined variables
# Both script and ini required to have u+x permission
# Sample exection
# $./CVE-2021-26272
#
# Change History
# 15/10/2021  Deepak Baranwal  Original code. This is a template for creating
#                              new Bash shell scripts.
#                              Add new history entries as needed.
#
#
################################################################################
################################################################################
# ORACLE_BASE=/u01/app/oracle
# ORACLE_HOME=/u01/app/oracle/product/18.4.0/db_1
# OACLE_SID=orclcdb
# SQLPLUS_HOME=/u01/app/oracle/product/18.4.0/db_1/bin/sqlplus

discover_26272_1(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
select status from dba_registry where comp_id='APEX';
EOM
)
  if [ "${val1}" = "VALID" ]
   then
     echo "APEX is installed"
     discover_26272_1_return=1
    else
      echo "APEX is not installed"
      discover_26272_1_return=0
   fi
   return "$discover_26272_1_return"
}

discover_26272_2(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
SELECT DBMS_XDB.gethttpport FROM DUAL;
EOM
)
 echo "${val1}"
  if [ "${val1}" <> 0 ]
   then
     discover_26272_2_return=1
    else
      discover_26272_2_return=0
   fi
   return "$discover_26272_2_return"
}

discover_26272_3(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
select value from v\$parameter where name='dispatchers';
EOM
)
  echo "${val1}"
  if [[ ${val1} == *"XDB"* ]]
   then
     discover_26272_3_return=1
    else
      discover_26272_3_return=0
   fi
   return "$discover_26272_3_return"
}

discover_26272_4(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
select account_status from dba_users where username = 'APEX_PUBLIC_USER';
EOM
)
  echo "${val1}"
  if [ "${val1}" = "OPEN" ]
   then
     discover_26272_4_return=1
    else
      discover_26272_4_return=0
   fi
   return "$discover_26272_4_return"
}


mitigate_26272_1(){
 echo " "
 echo "mitigate_26272_1"
 echo "please review commands in sql file mitigate_26272_1.sql"
 echo "--mitigate_26272_1.sql" > mitigate_26272_1.sql
 echo "--The vulnerability is specific to HTTP protocol, thus assess the XDB http port, ensuring to set up relevant firewall rules to XML HTTP/FTP ports." >> mitigate_26272_1.sql
 echo "--Note: Where XDB or no other XML DB product in use, it is recommended to disable the XDB ports." >> mitigate_26272_1.sql
 echo "conn / as sysdba" >> mitigate_26272_1.sql
 echo "exec dbms_xdb.sethttpport(0);" >> mitigate_26272_1.sql
 echo "exec dbms_xdb.setftpport(0);" >> mitigate_26272_1.sql
 echo "alter system register;" >> mitigate_26272_1.sql
}

mitigate_26272_2(){
echo " "
echo "please review recommendation in sql file mitigate_26272_2.txt"
echo "mitigate_26272_2"  >mitigate_26272_2.txt
echo "APEXâ€™s Page Access Protection (PAP - For Pages) and Session State Protection (SSP - For Items) " >>mitigate_26272_2.txt
echo "In APEX, Application Builder tab, select Application, then Shared Components->Session State Protection. In Set Application Protection select Enable button and enable one of:  " >>mitigate_26272_2.txt
echo "Page Level Protection  " >>mitigate_26272_2.txt
echo "Page Item Protection  " >>mitigate_26272_2.txt
echo "Application Item Protection  " >>mitigate_26272_2.txt
echo "This is documented in the APEX App Builder User's Guides.
e.g.
https://docs.oracle.com/en/database/oracle/application-express/20.2/htmdb/configuring-security-attributes.html#GUID-D3ECB171-681E-4452-BB33-5E74EC0EE13E
" >>mitigate_26272_2.txt

echo "The following SQL queries can be useful for checking URL tampering configuration. " >>mitigate_26272_2.txt
echo "
#Page items without Session State Protection;
SELECT aap.application_name,
       aap.page_id,
       aap.page_name
  FROM apex_application_pages aap
 WHERE LOWER (aap.page_access_protection) = 'unrestricted'
   AND aap.application_id = :app_id
};

#APEX page items without URL tampering protection
SELECT aapi.application_id,
       aapi.application_name,
       aapi.page_id,
       aapi.page_name,
       aapi.item_name
  FROM apex_application_page_items aapi
 WHERE aapi.application_id = :app_id
   AND LOWER (aapi.item_protection_level) = 'unrestricted';
" >>mitigate_26272_2.txt

}


discover_26272_1_return=$?
discover_26272_2_return=$?
discover_26272_3_return=$?
discover_26272_4_return=$?

discover_26272_1
discover_26272_2
discover_26272_3
discover_26272_4



if [ "$discover_26272_1_return" == 1 ] || [ "$discover_26272_2_return" == 1 ] || [ "$discover_26272_3_return" == 1 ]
then
   mitigate_26272_1
fi

if [ "$discover_26272_4_return" == 1 ]
then
   mitigate_26272_2
fi
### main ###
