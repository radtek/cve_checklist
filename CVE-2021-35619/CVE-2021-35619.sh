#!/usr/bin/bash
#. ./oracle_param.ini
################################################################################
#                       CVE-2021-35619
#                   12.1.0.2, 12.2.0.1, 19c, 21c
# Sample script that checks the DB version and execute a check following
# by recommendation.
# Create oracle_param.ini file with defined variables
# Both script and ini required to have u+x permission
# Sample exection
# $./CVE-2020-27193
#
# Change History
# 15/10/2021  Deepak Baranwal  Original code. This is a template for creating
#                              new Bash shell scripts.
#                              Add new history entries as needed.
#
#
################################################################################
################################################################################
ORACLE_BASE=/u01/app/oracle
ORACLE_HOME=/u01/app/oracle/product/18.4.0/db_1
OACLE_SID=orclcdb
SQLPLUS_HOME=/u01/app/oracle/product/18.4.0/db_1/bin/sqlplus


# ('DBS_SERVICES_PROFILE','SYSTEM_ACCOUNTS','DEFAULT','C##SYSTEM_ACCOUNTS','C##DBS_SERVICES_PROFILE')

discover_35619_1(){
#SQL 1
val1=$(sqlplus -s / as sysdba<<EOM
    @sql/discover_35619_1.sql
EOM
)
  #echo "${val1}"
  if [[ ${val1} == *"JAVA"* ]]
   then
     discover_35619_1_return=1
    else
      discover_35619_1_return=0
   fi
   return "$discover_35619_1_return"
}

discover_35619_2(){
#SQL 2
val1=$(sqlplus -s / as sysdba<<EOM
    @sql/discover_35619_2.sql
EOM
)
 if [ ${#val1} > 0 ]
 then
  #echo "${val1}"
  discover_35619_2_return=1
 else
  discover_35619_2_return=0
 fi
  return "$discover_35619_2_return"
}


discover_35619_3(){
#SQL 3
val1=$(sqlplus -s / as sysdba<<EOM
    @sql/discover_35619_3.sql
EOM
)
 if [ ${#val1} > 0 ]
 then
  discover_35619_3_return=1
 else
  discover_35619_3_return=0
 fi
  return "$discover_35619_3_return"
}


discover_35619_4(){
#SQL 4
val1=$(sqlplus -s / as sysdba<<EOM
    @sql/discover_35619_4.sql
EOM
)
 if [ ${#val1} > 0 ]
 then
  discover_35619_4_return=1
 else
  discover_35619_4_return=0
 fi
  return "$discover_35619_4_return"
}

discover_35619_5(){
#SQL#10
val1=$(sqlplus -s / as sysdba<<EOM
    @sql/discover_35619_5.sql
EOM
)
 if [ ${#val1} > 0 ]
 then
  discover_35619_5_return=1
 else
  discover_35619_5_return=0
 fi
  return "$discover_35619_5_return"
}


### Mitigate functions
mitigate_35619_1(){
  # SQL#5
  echo "Mitigate #1 "
  echo "1. Ensure that any users with the exploit privilege 'CREATE PROCEDURE' cannot delegate it to other users and those assigned are authorized to have this privilege assignment. "
  echo "commands in sql file mitigate_35619_1.sql"
  echo "Please review mitigate_35619_1.sql"
  sqlplus -s / as sysdba<<EOM
    @sql/mitigate_35619_1.sql
EOM
}

mitigate_35619_2(){
  # SQL#6.
  echo "  "
  echo "Mitigate #2 "
  echo "2. Each user or schema must be assigned the proper permissions to access operating system resources,"
  echo "such as sockets, files, and system properties to load and run Java in the database."
  echo "DBA_JAVA_POLICY describes Java security permissions for all users in the database."
  echo "Following SQL Return Java Permissions (such as java.net.SocketPermission) Assigned to Users With Host/Port Details. These should be AUDIT. "
  echo "Please review mitigate_35619_2.sql"
  sqlplus -s / as sysdba<<EOM
    @sql/mitigate_35619_2.sql
EOM
}

mitigate_35619_3(){
  # SQL#7, SQL#7B
  echo "  " 
  echo "Mitigate #3"
  echo "3. Remove permissions to unauthorized users. In order to remove a Java permission from the database, it must first be disabled using the dbms_java.revoke_permission procedure. "
  echo "Then the permissions can be removed via the REVOKE PERMISSION and DELETE_PERMISSION procedure of the DBMS_JAVA package to remove or DROP a particular permission from the database. "
  echo "please review commands in sql file mitigate_35619_3.sql"
  sqlplus -s / as sysdba<<EOM
    @sql/mitigate_35619_3.sql
EOM
}


mitigate_35619_4(){
  # SQL#8
  echo "  " 
  echo "Mitigate #4 "
  echo "4. To ensure Java security in the database meets security framework standards and escalation of privileges cannot be performed outside of administrator control. "
  echo "Ensure 'EXECUTE' is revoked from 'PUBLIC' on Java Packages.  "
  echo "please review commands in sql file mitigate_35619_4.sql"
  sqlplus -s / as sysdba<<EOM
    @sql/mitigate_35619_4.sql
EOM
}


mitigate_35619_5(){
  # SQL#9, #9B
  echo " "
  echo "Mitigate #5"
  echo "5. Ensure membership of the JAVASYSPRIV and DEBUG roles is revoked from unauthorized 'GRANTEE'. "
  echo "SQL could be used to identify accounts "
  echo "please review commands in sql file mitigate_35619_5.sql"
  sqlplus -s / as sysdba<<EOM
    @sql/mitigate_35619_5.sql
EOM
}

mitigate_35619_6(){
    echo "Mitigate #6"
    echo "6. Please review commands in sql file mitigate_35619_6.sql"
    echo "Ensure OS User is low privileged OS user and not Oracle/Application owner," 
    echo "and ensure secure Use of Runtime.exec Functionality in Oracle Database. " 
    echo "Reference: https://docs.oracle.com/database/121/JJDEV/chten.htm#JJDEV13638" 
    echo "revoke Execute All Files Permissions from Unauthorized users"    
    echo "revoke AllPermission from Unauthorized users." 
    echo "Ensure wildcard java.io.FilePermission.write is revoked from unauthorized 'GRANTEE'.  "  
    echo "revoke Java Load Library permission by SEQ number" 
    echo "Ensure "ALL" Is Revoked from Unauthorized "GRANTEE" on database sensitive objects." 
  
  sqlplus -s / as sysdba<<EOM
    @sql/mitigate_35619_6.sql
EOM
}


discover_35619_1_return=$?
discover_35619_2_return=$?
discover_35619_3_return=$?
discover_35619_4_return=$?
discover_35619_5_return=$?


discover_35619_1
discover_35619_2
discover_35619_3
discover_35619_4
discover_35619_5


if [ "$discover_35619_1_return" == 1 ] || [ "$discover_35619_2_return" == 1 ] || [ "$discover_35619_3_return" == 1 ] || [ "$discover_35619_4_return" == 1 ] 
then
   mitigate_35619_1
   mitigate_35619_2
   mitigate_35619_3
   mitigate_35619_4
   mitigate_35619_5
   
fi

if [ "$discover_35619_5_return" == 1 ]
then
   mitigate_35619_6
fi
### main ###

