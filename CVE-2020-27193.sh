#!/usr/bin/bash
#. ./oracle_param.ini
################################################################################
#                       CVE-2020-27193
#                       CVE-2020-26870
#                       CVE-2021-2460
#
#                    Prior to 21.1.0.00.01
# Sample script that checks the DB version and execute a check following
# by recommendation.
# Create oracle_param.ini file with defined variables
# Both script and ini required to have u+x permission
# Sample exection
# $./CVE-2020-27193
#
# Change History
# 15/10/2021  Deepak Baranwal  Original code. This is a template for creating
#                              new Bash shell scripts.
#                              Add new history entries as needed.
#
#
################################################################################
################################################################################
ORACLE_BASE=/u01/app/oracle
ORACLE_HOME=/u01/app/oracle/product/18.4.0/db_1
OACLE_SID=orclcdb
SQLPLUS_HOME=/u01/app/oracle/product/18.4.0/db_1/bin/sqlplus

discover_27193_1(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
select status from dba_registry where comp_id='APEX';
EOM
)
  echo "${val1}"
  if [ "${val1}" = "VALID" ]
   then
     echo "APEX is installed"
     discover_27193_1_return=1
    else
      echo "APEX is not installed"
      discover_27193_1_return=0
   fi
   return "$discover_27193_1_return"
}

discover_27193_2(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
SELECT DBMS_XDB.gethttpport FROM DUAL;
EOM
)
 echo "${val1}"
  if [ "${val1}" = "VALID" ]
   then
     discover_27193_2_return=1
    else
      discover_27193_2_return=0
   fi
   return "$discover_27193_2_return"
}

discover_27193_3(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
select value from v\$parameter where name='dispatchers';
EOM
)
  echo "${val1}"
  if [[ ${val1} == *"XDB"* ]]
   then
     discover_27193_3_return=1
    else
      discover_27193_3_return=0
   fi
   return "$discover_27193_3_return"
}

discover_27193_4(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
select account_status from dba_users where username = 'APEX_PUBLIC_USER';
EOM
)
  echo "${val1}"
  if [ "${val1}" = "OPEN" ]
   then
     discover_27193_4_return=1
    else
      discover_27193_4_return=0
   fi
   return "$discover_27193_4_return"
}

discover_27193_5(){
val1=$(sqlplus -s / as sysdba<<EOM
set heading OFF termout ON trimout ON feedback OFF
set pagesize 0
SELECT account_status FROM dba_users where username = 'ANONYMOUS';
EOM
)
  echo "${val1}"
  if [ "${val1}" = "OPEN" ]
   then
     discover_27193_5_return=1
    else
      discover_27193_5_return=0
   fi
   return "$discover_27193_5_return"
}

mitigate_27193_1(){
 echo " "
 echo "mitigate_27193_1"
 echo "The vulnerability is specific to HTTP protocol, "
 echo "Thus assess the XDB http port, ensuring to block firewall connections to XML HTTP/FTP ports."
 echo "If you canâ€™t modify the firewall rules, please disable the XDB port."
 echo "Commands are generated in file mitigate_27193_1.sql "
 echo "--- Commands to mitigate CVE-2020-27193 "                             >  mitigate_27193_1.sql
 echo "--- For Clustered Database Run the commands from any one of the node" >> mitigate_27193_1.sql
 echo "exec dbms_xdb.sethttpport(0);"                                                                                                   >> mitigate_27193_1.sql
 echo "exec dbms_xdb.setftpport(0);"                                                                                                                    >> mitigate_27193_1.sql
 echo "alter system register;"                                                                                                                      >> mitigate_27193_1.sql
}


mitigate_27193_3(){
echo " "
echo "mitigate_27193_3"
echo "If Native Oracle XML DB Web Services feature has been enabled, audit the web service access to schema objects controlled by three roles, which must be granted to a specific user by SYS. Ensure these privileges are assigned to relevant users only." > mitigate_27193_3.txt
echo "XDB_WEBSERVICES - This role grants web service access to a specific user. This is the only mandatory role for web service access." >> mitigate_27193_3.txt
echo "XDB_WEBSERVICES_OVER_HTTP - This role grants access to web services over HTTP." >> mitigate_27193_3.txt
echo "XDB_WEBSERVICES_WITH_PUBLIC - By default, web services have no access to objects with privileges granted to PUBLIC. Granting this role allows access to PUBLIC objects." >> mitigate_27193_3.txt
}


mitigate_27193_4(){
  echo " "
  echo "mitigate_27193_4"
  echo "To reduce the attack surface consider removing Oracle Appliechoion Express (APEX) if not in use, it is recommended that version 12.1 and earlier versions are uninstalled." > mitigate_27193_4.txt
  echo "To remove Oracle Appliechoion Express from the database, log in to SQL*Plus as the SYS user and execute the following command:" >> mitigate_27193_4.txt
  echo "@apxremov.sql" >> mitigate_27193_4.txt
  echo "if you do not wish to remove APEX from legacy versions,  lock APEX_PUBLIC_USER" >> mitigate_27193_4.txt
}


mitigate_27193_5(){
  echo " "
  echo "mitigate_27193_5"
  echo "Anonymous repository access is the ability to access certain GET operations within the database without being prompted for a database user name and password."
  echo "This is enabled by configuring the xdbconfig.xml file and unlocking the database user account called ANONYMOUS."
  echo "This account is locked by default and should never be assigned a database password. "
  echo " ALTER USER ANONYMOUS ACCOUNT LOCK PASSWORD EXPIRE;"
  echo "Commands are generated in file mitigate_27193_5.sql "
  echo "--- Commands to mitigate CVE-2020-27193 "                             >  mitigate_27193_5.sql
  echo "ALTER USER ANONYMOUS ACCOUNT LOCK PASSWORD EXPIRE;"                  >>  mitigate_27193_5.sql
}

### main ###
ver=$(sqlplus -s / as sysdba <<EOM
      set heading OFF termout ON trimout ON feedback OFF
      set pagesize 0
      select version from v\$instance;
EOM
     )

discover_27193_1_return=$?
discover_27193_2_return=$?
discover_27193_3_return=$?
discover_27193_4_return=$?
discover_27193_5_return=$?

discover_27193_1
discover_27193_2
discover_27193_3
discover_27193_4
discover_27193_5


if [ "$discover_27193_1_return" == 1 ] | [ "$discover_27193_2_return" == 1 ] | [ "$discover_27193_3_return" == 1 ]
then
   mitigate_27193_1
   mitigate_27193_3
fi

if [ "$discover_27193_4_return" == 1 ] | [ "$discover_27193_5_return" == 1 ]
then
   mitigate_27193_4
   mitigate_27193_5
fi
### main ###
